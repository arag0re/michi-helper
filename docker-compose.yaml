version: '3.9'

services:
   mongodb:
      image: mongo:jammy
      environment:
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: rootpassword
        MONGO_INITDB_DATABASE: michi_helper
      restart: always
      healthcheck:
         test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok;"]
         interval: 10s
         timeout: 10s
         retries: 10
      ports:
        - 27017:27017
      networks:
         network:
            ipv4_address: 10.7.0.2
      volumes:
         - ./mongo:/data/db
   backend:
      environment:
         MONGODB_USER: root
         MONGODB_PASS: rootpassword
         MONGODB_PORT: 27017
         MONGODB_NAME: michi_helper
         MONGODB_HOST: 10.7.0.2
         BACKEND_PORT: 3001
      restart: always
      build: 
         context: ./backend
      ports:
        - 3001:3001
      networks:
         network:
            ipv4_address: 10.7.0.3
      volumes:
        - ./backend:/opt/michi-helper/backend:delegated
        - /opt/michi-helper/backend/node_modules
      depends_on:
        mongodb:
            condition: service_healthy
   frontend:
      environment:
         env_file: .env
         NODE_ENV: development
      restart: always
      build:
         context: ./frontend
      ports:
        - 3000:3000
        - 8097:8097
      networks:
         network:
            ipv4_address: 10.7.0.4
      volumes:
        - ./frontend:/opt/michi-helper/frontend:delegated
        - /opt/michi-helper/frontend/node_modules
      depends_on:
      - backend
   nginx:
      image: nginx:stable-alpine
      ports:
         - 80:80
      volumes:
         - ./frontend/build:/var/www/nginx-default
         - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
         - ./nginx/nginx.conf:/etc/nginx/nginx.conf
networks:
  network:
    driver: bridge
    ipam:
      config:
        - subnet: 10.7.0.0/16
          gateway: 10.7.0.1